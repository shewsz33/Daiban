:::canmore.create_textdoc
{"name": "todo_app_android", "type": "code/kotlin", "content": "├── app\n│   ├── build.gradle.kts\n│   └── src\n│       ├── main\n│       │   ├── AndroidManifest.xml\n│       │   ├── java/com/example/todoapp\n│       │   │   ├── MainActivity.kt\n│       │   │   ├── data\n│       │   │   │   ├── Task.kt\n│       │   │   │   ├── TaskDao.kt\n│       │   │   │   ├── TaskDatabase.kt\n│       │   │   │   └── TaskRepository.kt\n│       │   │   ├── ui\n│       │   │   │   ├── TaskAdapter.kt\n│       │   │   │   └── TaskViewModel.kt\n│       │   └── res\n│       │       ├── layout\n│       │       │   ├── activity_main.xml\n│       │       │   └── item_task.xml\n│       │       └── values\n│       │           └── strings.xml\n└── build.gradle.kts\n\n---\n\n### Root `build.gradle.kts`\n`kotlin\nplugins {\n    id(\"com.android.application\") version \"8.0.2\" apply false\n    id(\"org.jetbrains.kotlin.android\") version \"1.9.0\" apply false\n}\n`\n\n### `app/build.gradle.kts`\n`kotlin\nplugins {\n    id(\"com.android.application\")\n    id(\"org.jetbrains.kotlin.android\")\n    id(\"kotlin-kapt\")\n}\n\nandroid {\n    namespace = \"com.example.todoapp\"\n    compileSdk = 34\n\n    defaultConfig {\n        applicationId = \"com.example.todoapp\"\n        minSdk = 24\n        targetSdk = 34\n        versionCode = 1\n        versionName = \"1.0\"\n    }\n\n    buildFeatures {\n        viewBinding = true\n    }\n}\n\ndependencies {\n    implementation(\"androidx.core:core-ktx:1.12.0\")\n    implementation(\"androidx.appcompat:appcompat:1.6.1\")\n    implementation(\"com.google.android.material:material:1.11.0\")\n    implementation(\"androidx.lifecycle:lifecycle-viewmodel-ktx:2.7.0\")\n    implementation(\"androidx.lifecycle:lifecycle-livedata-ktx:2.7.0\")\n    implementation(\"androidx.recyclerview:recyclerview:1.3.2\")\n\n    implementation(\"androidx.room:room-runtime:2.6.1\")\n    kapt(\"androidx.room:room-compiler:2.6.1\")\n    implementation(\"androidx.room:room-ktx:2.6.1\")\n}\n`\n\n### `AndroidManifest.xml`\n`xml\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    package=\"com.example.todoapp\">\n\n    <application\n        android:allowBackup=\"true\"\n        android:label=\"ToDoApp\"\n        android:supportsRtl=\"true\"\n        android:theme=\"@style/Theme.Material3.DayNight.NoActionBar\">\n        <activity android:name=\".MainActivity\">\n            <intent-filter>\n                <action android:name=\"android.intent.action.MAIN\" />\n                <category android:name=\"android.intent.category.LAUNCHER\" />\n            </intent-filter>\n        </activity>\n    </application>\n</manifest>\n`\n\n### 数据层\n**`Task.kt`**\n`kotlin\npackage com.example.todoapp.data\n\nimport androidx.room.Entity\nimport androidx.room.PrimaryKey\n\n@Entity(tableName = \"tasks\")\ndata class Task(\n    @PrimaryKey(autoGenerate = true) val id: Int = 0,\n    val title: String,\n    val isDone: Boolean = false\n)\n`\n\n**`TaskDao.kt`**\n`kotlin\npackage com.example.todoapp.data\n\nimport androidx.lifecycle.LiveData\nimport androidx.room.*\n\n@Dao\ninterface TaskDao {\n    @Insert suspend fun insert(task: Task)\n    @Update suspend fun update(task: Task)\n    @Delete suspend fun delete(task: Task)\n\n    @Query(\"SELECT * FROM tasks ORDER BY id DESC\")\n    fun getAllTasks(): LiveData<List<Task>>\n}\n`\n\n**`TaskDatabase.kt`**\n`kotlin\npackage com.example.todoapp.data\n\nimport android.content.Context\nimport androidx.room.Database\nimport androidx.room.Room\nimport androidx.room.RoomDatabase\n\n@Database(entities = [Task::class], version = 1)\nabstract class TaskDatabase : RoomDatabase() {\n    abstract fun taskDao(): TaskDao\n\n    companion object {\n        @Volatile private var INSTANCE: TaskDatabase? = null\n\n        fun getDatabase(context: Context): TaskDatabase {\n            return INSTANCE ?: synchronized(this) {\n                val instance = Room.databaseBuilder(\n                    context.applicationContext,\n                    TaskDatabase::class.java,\n                    \"task_database\"\n                ).build()\n                INSTANCE = instance\n                instance\n            }\n        }\n    }\n}\n`\n\n**`TaskRepository.kt`**\n`kotlin\npackage com.example.todoapp.data\n\nclass TaskRepository(private val dao: TaskDao) {\n    val tasks = dao.getAllTasks()\n\n    suspend fun insert(task: Task) = dao.insert(task)\n    suspend fun update(task: Task) = dao.update(task)\n    suspend fun delete(task: Task) = dao.delete(task)\n}\n`\n\n### UI 层\n**`TaskViewModel.kt`**\n`kotlin\npackage com.example.todoapp.ui\n\nimport android.app.Application\nimport androidx.lifecycle.AndroidViewModel\nimport androidx.lifecycle.viewModelScope\nimport com.example.todoapp.data.*\nimport kotlinx.coroutines.launch\n\nclass TaskViewModel(app: Application) : AndroidViewModel(app) {\n    private val dao = TaskDatabase.getDatabase(app).taskDao()\n    private val repository = TaskRepository(dao)\n\n    val tasks = repository.tasks\n\n    fun addTask(title: String) = viewModelScope.launch {\n        repository.insert(Task(title = title))\n    }\n\n    fun toggleTask(task: Task) = viewModelScope.launch {\n        repository.update(task.copy(isDone = !task.isDone))\n    }\n\n    fun deleteTask(task: Task) = viewModelScope.launch {\n        repository.delete(task)\n    }\n}\n`\n\n**`TaskAdapter.kt`**\n`kotlin\npackage com.example.todoapp.ui\n\nimport android.view.LayoutInflater\nimport android.view.ViewGroup\nimport androidx.recyclerview.widget.RecyclerView\nimport com.example.todoapp.data.Task\nimport com.example.todoapp.databinding.ItemTaskBinding\n\nclass TaskAdapter(\n    private val onToggle: (Task) -> Unit,\n    private val onDelete: (Task) -> Unit\n) : RecyclerView.Adapter<TaskAdapter.TaskViewHolder>() {\n\n    private var tasks: List<Task> = emptyList()\n\n    fun submitList(newTasks: List<Task>) {\n        tasks = newTasks\n        notifyDataSetChanged()\n    }\n\n    inner class TaskViewHolder(private val binding: ItemTaskBinding) : RecyclerView.ViewHolder(binding.root) {\n        fun bind(task: Task) {\n            binding.checkBox.text = task.title\n            binding.checkBox.isChecked = task.isDone\n\n            binding.checkBox.setOnClickListener { onToggle(task) }\n            binding.btnDelete.setOnClickListener { onDelete(task) }\n        }\n    }\n\n    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): TaskViewHolder {\n        val binding = ItemTaskBinding.inflate(LayoutInflater.from(parent.context), parent, false)\n        return TaskViewHolder(binding)\n    }\n\n    override fun onBindViewHolder(holder: TaskViewHolder, position: Int) {\n        holder.bind(tasks[position])\n    }\n\n    override fun getItemCount() = tasks.size\n}\n`\n\n**`MainActivity.kt`**\n`kotlin\npackage com.example.todoapp\n\nimport android.os.Bundle\nimport androidx.activity.viewModels\nimport androidx.appcompat.app.AppCompatActivity\nimport androidx.recyclerview.widget.LinearLayoutManager\nimport com.example.todoapp.databinding.ActivityMainBinding\nimport com.example.todoapp.ui.TaskAdapter\nimport com.example.todoapp.ui.TaskViewModel\n\nclass MainActivity : AppCompatActivity() {\n    private lateinit var binding: ActivityMainBinding\n    private val viewModel: TaskViewModel by viewModels()\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        binding = ActivityMainBinding.inflate(layoutInflater)\n        setContentView(binding.root)\n\n        val adapter = TaskAdapter(onToggle = { viewModel.toggleTask(it) }, onDelete = { viewModel.deleteTask(it) })\n        binding.recyclerView.layoutManager = LinearLayoutManager(this)\n        binding.recyclerView.adapter = adapter\n\n        viewModel.tasks.observe(this) { adapter.submitList(it) }\n\n        binding.btnAdd.setOnClickListener {\n            val title = binding.etTask.text.toString()\n            if (title.isNotBlank()) {\n                viewModel.addTask(title)\n                binding.etTask.text.clear()\n            }\n        }\n    }\n}\n`\n\n### 布局文件\n**`activity_main.xml`**\n`xml\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:orientation=\"vertical\"\n    android:padding=\"16dp\">\n\n    <EditText\n        android:id=\"@+id/etTask\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:hint=\"New Task\" />\n\n    <Button\n        android:id=\"@+id/btnAdd\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Add\" />\n\n    <androidx.recyclerview.widget.RecyclerView\n        android:id=\"@+id/recyclerView\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"0dp\"\n        android:layout_weight=\"1\" />\n</LinearLayout>\n`\n\n**`item_task.xml`**\n`xml\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:orientation=\"horizontal\"\n    android:padding=\"8dp\">\n\n    <CheckBox\n        android:id=\"@+id/checkBox\"\n        android:layout_width=\"0dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_weight=\"1\" />\n\n    <Button\n        android:id=\"@+id/btnDelete\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Delete\" />\n</LinearLayout>\n`\n\n**`strings.xml`**\n`xml\n<resources>\n    <string name=\"app_name\">ToDoApp</string>\n    <string name=\"add\">Add</string>\n    <string name=\"delete\">Delete</string>\n</resources>\n`\n\n---\n\n这个骨架可以直接粘贴到 GitHub 仓库，运行在 Android Studio（Gradle + Kotlin）。\n"}
:::
